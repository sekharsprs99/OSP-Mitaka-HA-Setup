---
# common code for all controllers
  - name: Fetch the repository packages from Percona web
    get_url:
      url=https://repo.percona.com/apt/percona-release_0.1-4.trusty_all.deb
      dest=/root
    tags: percona-fetch-repo

  - name: Install the downloaded package
    apt: deb=/root/percona-release_0.1-4.trusty_all.deb update_cache=yes
    tags: percona-source-list

  - name: set public nameserver in resolv.conf
    lineinfile: dest=/etc/resolv.conf line="nameserver 8.8.8.8"

  - name: Changing MySql root password
    debconf: name=percona-xtradb-cluster-server-5.5
             question=percona-xtradb-cluster-server/{{ item }}
             value='{{ mysql_root_password }}'
             vtype='password'
    with_items:
      - 'root_password'
      - 'root_password_again'
    tags: mysql-root-password

  - name: Install percona-xtradb-cluster in controller nodes
    apt: name={{ item }} state=present force=yes update_cache=yes
    with_items:
     - percona-xtradb-cluster-galera-2.x
     - percona-xtradb-cluster-server-5.5
     - python-mysqldb
    tags: percona-packages

  - name: Disbale AppArmor's profile form MySQL
    command: "{{ item }}"
    with_items:
      - ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
      - apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
    ignore_errors: yes
    tags: mysqld-apparmor

  - name: Apt-Pinning the packages
    copy: src=00percona.pref dest=/etc/apt/preferences.d/00percona.pref
    tags: percona-apt-pin

  - name: Stop MySql Service on All Controllers
    service: name=mysql state=stopped
    tags: sql-stop

# Code for only controller nodes
  - name: Configuring for Bootstrapping on controller01
    template: src=my.cnf.j2 dest=/etc/mysql/my.cnf
    tags: mysql-bootstrap, myconf

  - name: Bootstrap Controller01
    command: /etc/init.d/mysql bootstrap-pxc
    when: ansible_hostname == controller01
    tags: mysql-bootstrap

  - name: Create and grant priv for sstuser user on controller01
    mysql_user: login_user=root login_password="{{ mysql_root_password }}" name=sstuser password={{ mysql_sstuser_password }} host=localhost priv="*.*:RELOAD,LOCK TABLES,REPLICATION CLIENT" state=present
    when: ansible_hostname == controller01
    tags: mysql-sstuser

  - name: Starting mysql on Controller02
    service: name=mysql state=started
    when: ansible_hostname == controller02
    tags: mysql-node2

  - name: Starting mysql controller03
    service: name=mysql state=started
    when: ansible_hostname == controller03
    tags: mysql-node3

  - name: Deleting downloaded percona-release_0.1-4.trusty_all.deb file
    file: path=/root/percona-release_0.1-4.trusty_all.deb state=absent
    tags: percona-release-deb-del

  - name: Make sure MySql doesn't start on boot
    service: name=mysql enabled=no
    tags: percona-boot-disable
#Resource Agent for percona-xtradb-cluster
#
#  - name: Configuring mysql resource
#    shell: crm configure primitive p_mysql ocf:percona:mysql params config="/etc/mysql/my.cnf" pid="/var/run/mysqld/mysqld.pid" socket="/var/run/mysqld/mysqld.sock" replication_user="sstuser" replication_passwd="s3cretPass" max_slave_lag="60" evict_outdated_slaves="false" binary="/usr/sbin/mysqld" test_user="root" test_passwd="{{ mysql_root_password }}" op monitor interval="15s" role="Master" OCF_CHECK_LEVEL="1" op monitor interval="10s" role="Slave" OCF_CHECK_LEVEL="1" op start interval="5" timeout="60s" op stop interval="3" timeout="60s"
#    when: ansible_hostname == controller01
#    tags: resource
#
#  - name: Percona Master Slave Clone Set
#    shell: crm configure ms ms_MySQL p_mysql meta master-max="1" master-node-max="1" clone-max="3" clone-node-max="1" notify="true" globally-unique="false" target-role="Master" is-managed="true"
#    when: ansible_hostname == controller01
