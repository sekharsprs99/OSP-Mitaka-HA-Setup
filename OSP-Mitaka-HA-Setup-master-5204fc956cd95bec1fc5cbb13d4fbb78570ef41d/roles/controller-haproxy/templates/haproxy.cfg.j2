global
    daemon
    group  haproxy
    log  /dev/log local0
    maxconn  16000
    pidfile  /var/run/haproxy.pid
    spread-checks  3
    stats  socket /var/lib/haproxy/stats
    tune.bufsize  32768
    tune.maxrewrite  1024
    user  haproxy

defaults
    log  global
    maxconn  8000
    mode  http
    option  redispatch
    option  http-server-close
    option  splice-auto
    option  dontlognull
    retries  3
    timeout  http-request 20s
    timeout  queue 1m
    timeout  connect 10s
    timeout  client 1m
    timeout  server 1m
    timeout  check 10s
    errorfile 400 /etc/haproxy/errors/400.http
	  errorfile 403 /etc/haproxy/errors/403.http
	  errorfile 408 /etc/haproxy/errors/408.http
	  errorfile 500 /etc/haproxy/errors/500.http
	  errorfile 502 /etc/haproxy/errors/502.http
	  errorfile 503 /etc/haproxy/errors/503.http
	  errorfile 504 /etc/haproxy/errors/504.http

listen stats
    bind {{ internal_vip }}:89
    mode http
    stats enable
    stats uri /stats
    stats realm HAProxy Statistics
    stats auth admin:password

listen dashboard
    bind {{ internal_vip }}:{{ default_apache_port }}
    balance roundrobin
    mode http
    {% for host in groups['controller_nodes'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ apache_port }} check inter 2000 rise 2 fall 5
    {% endfor %}

listen galera
    bind {{ internal_vip }}:{{ default_mysql_port }}
    mode tcp
    balance roundrobin
    {% for host in groups['controller_nodes'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ mysql_port }} check inter 2000 rise 2 fall 5
    {% endfor %}

listen memcached
    bind {{ internal_vip }}:{{ default_memcached_port }}
    mode tcp
    balance roundrobin
    {% for host in groups['controller_nodes'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ memcached_port }} check inter 2000 rise 2 fall 5
    {% endfor %}

listen glance_api
    bind {{ internal_vip }}:{{ default_glance_api_port }}
    mode tcp
    balance roundrobin
    {% for host in groups['controller_nodes'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ glance_api_port }} check inter 2000 rise 2 fall 5
    {% endfor %}

listen glance_registry
    bind {{ internal_vip }}:{{ default_registry_port }}
    mode tcp
    balance roundrobin
    {% for host in groups['controller_nodes'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ glance_registry_port }} check inter 2000 rise 2 fall 5
    {% endfor %}

listen keystone_admin
    bind {{ internal_vip }}:{{ default_keystone_admin_port }}
    mode tcp
    balance roundrobin
    {% for host in groups['controller_nodes'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ keystone_admin_port }} check inter 2000 rise 2 fall 5
    {% endfor %}

listen keystone_public_internal
    bind {{ public_vip }}:{{ default_keystone_public_port }}
    mode tcp
    balance roundrobin
    {% for host in groups['controller_nodes'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ public_iface ]['ipv4']['address'] }}:{{ keystone_public_port }} check inter 2000 rise 2 fall 5
    {% endfor %}

listen nova_ec2_api
    bind {{ internal_vip }}:{{ default_nova_ec2_api_port }}
    balance  source
    option  tcpka
    option  tcplog
    {% for host in groups['controller_nodes'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ nova_ec2_api_listen_port }} check inter 2000 rise 2 fall 5
    {% endfor %}

listen nova_compute_api
    bind {{ internal_vip }}:{{ default_osapi_compute_listen_port }}
    balance roundrobin
    mode tcp
    {% for host in groups['controller_nodes'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ osapi_compute_listen_port }} check inter 2000 rise 2 fall 5
    {% endfor %}

listen nova_metadata_api
    bind {{ internal_vip }}:{{ default_metadata_listen_port }}
    balance  source
    option  tcpka
    option  tcplog
    {% for host in groups['controller_nodes'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ metadata_listen_port }} check inter 2000 rise 2 fall 5
    {% endfor %}

#listen cinder_api
#    bind {{ internal_vip }}:{{ default_cinder_port }}
#    balance  source
#    option  tcpka
#    option  httpchk
#    option  tcplog
#     {% for host in groups['controller_nodes'] %}
#server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ cinder_port }} check inter 2000 rise 2 fall 5
#     {% endfor %}

#listen ceilometer_api
#    bind {{ internal_vip }}:{{ default_ceilometer_port }}
#    balance  source
#    option  tcpka
#    option  tcplog
#     {% for host in groups['controller_nodes'] %}
#server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ ceilometer_port }} check inter 2000 rise 2 fall 5
#     {% endfor %}

listen nova_vncproxy
    bind {{ internal_vip }}:{{ default_novnvproxy_port }}
    balance  source
    option  tcpka
    option  tcplog
    {% for host in groups['controller_nodes'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ novncproxy_port }} check inter 2000 rise 2 fall 5
    {% endfor %}

listen neutron_api
    bind {{ internal_vip }}:9696
    balance roundrobin
    mode tcp
    {% for host in groups['controller_nodes'] %}
server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ neutron_port }} check inter 2000 rise 2 fall 5
    {% endfor %}

#listen swift_proxy_cluster
#    bind {{ internal_vip }}:{{ default_swift_port }}
#    balance  source
#    option  tcplog
#    option  tcpka
#     {% for host in groups['controller_nodes'] %}
#server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_'+ mgmt_iface ]['ipv4']['address'] }}:{{ swift_port }} check inter 2000 rise 2 fall 5
#     {% endfor %}
